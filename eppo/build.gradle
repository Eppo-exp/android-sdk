plugins {
    id 'com.android.library'
    id 'maven-publish'
}

group = "cloud.eppo"
version = "1.0.1"

android {
    compileSdk 33

    defaultConfig {
        gradle.startParameter.taskNames.each {
            if (it.contains("AndroidTest") || it.contains("connectedCheck")) {
                minSdk 33 // required to use wiremock in tests
            } else {
                minSdk 21
            }
        }
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        def EPPO_VERSION = "EPPO_VERSION"

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", EPPO_VERSION, "\"${project.properties.get("version")}\""
            matchingFallbacks = ['release']
        }

        debug {
            minifyEnabled false
            buildConfigField "String", EPPO_VERSION, "\"${project.properties.get("version")}\""
            matchingFallbacks = ['debug']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    packagingOptions {
        exclude("META-INF/**")
    }
}

ext {}
ext.versions = [
    "junit": "4.13.2",
    "androidx_junit": "1.1.3",
    "androidx_core": "1.5.0",
    "androidx_runner": "1.5.2",
    "gson": "2.9.1",
    "okhttp": "4.10.0",
    "wiremock": "2.34.0"
]


dependencies {
    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "com.github.tomakehurst:wiremock-jre8:${versions.wiremock}"
    androidTestImplementation "androidx.test.ext:junit:${versions.androidx_junit}"
    androidTestImplementation "androidx.test:core:${versions.androidx_core}"
    androidTestImplementation "androidx.test:runner:${versions.androidx_runner}"

    implementation("com.google.code.gson:gson:${versions.gson}")
    implementation("com.squareup.okhttp3:okhttp:${versions.okhttp}")
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'cloud.eppo'
            artifactId = 'android-sdk'
            version = project.properties.get("version")

            afterEvaluate {
                from components.release
            }

            pom {
                name = 'Eppo Android'
                description = 'Eppo Android SDK'
                url = 'https://github.com/Eppo-exp/android-sdk'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        name = 'Eppo'
                        email = 'https://www.geteppo.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Eppo-exp/android-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com/Eppo-exp/android-sdk.git'
                    url = 'https://github.com/Eppo-exp/android-sdk/tree/main'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = "$MAVEN_USERNAME"
                password = "$MAVEN_PASSWORD"
            }

            url = "https://s01.oss.sonatype.org/content/repositories/releases"
        }
    }
}

task runEppoTests(type: GradleBuild) {
    tasks = [
        ':eppo:testDebugUnitTest',
        ':eppo:connectedDebugAndroidTest'
    ]
}